compartment "univ": volume 1.0;
speciesPopulations "sp";

# shorthand:  minBases = 45;      => define "minBases": value 45;
#             A + B -> C, 1.0;
#             A = 100;

define "minBases": value 45;
define "codingRegionLengthBases": value 1000.0;
define "transcriptionRate": value 1.0;
define "abortProbPerBase": value 0.005;

species "TFA": compartment "univ";
species "TFB": compartment "univ";
species "DNA_plus_TFA": compartment "univ";
species "DNA_plus_TFB": compartment "univ";
species "DNA_plus_TFC": compartment "univ";
species "DNA": compartment "univ";
species "PCOM_plus_DNA_past_base_$[minBases]": compartment "univ";
species "mRNA_product_complete": compartment "univ";
species "mRNA_product_fragment": compartment "univ";
species "PolII": compartment "univ";

loop "i": start 1, stop [minBases]
{
        species "PCOM_plus_DNA_at_base_$[i]": compartment "univ";
}

addToSpeciesPopulations "sp": species "TFA", population 5;
addToSpeciesPopulations "sp": species "TFB", population 5;
addToSpeciesPopulations "sp": species "DNA_plus_TFA", population 0;
addToSpeciesPopulations "sp": species "DNA_plus_TFB", population 0;
addToSpeciesPopulations "sp": species "DNA_plus_TFC", population 0;
addToSpeciesPopulations "sp": species "DNA", population 1;
addToSpeciesPopulations "sp": species "PCOM_plus_DNA_past_base_$[minBases]", population 0;
addToSpeciesPopulations "sp": species "mRNA_product_complete", population 0;
addToSpeciesPopulations "sp": species "mRNA_product_fragment", population 0;
addToSpeciesPopulations "sp": species "PolII", population 5;

loop "i": start 1, stop [minBases]
{
        addToSpeciesPopulations "sp": species "PCOM_plus_DNA_at_base_$[i]", population 0;
}

loop "i": start 1, stop [minBases-1]
{
        reaction "POL_advance$[i]": reactants ("PCOM_plus_DNA_at_base_$[i]"), products ("PCOM_plus_DNA_at_base_$[i+1]"), rate  [transcriptionRate];
}

# shorthand:  PCOM_plus_DNA_at_base_[minBases] -> DNA_plus_TFC + PCOM_plus_DNA_past_base_[minBases]; [transcriptionRate]
reaction "POL_faraway": reactants ("PCOM_plus_DNA_at_base_$[minBases]"), products ("DNA_plus_TFC" "PCOM_plus_DNA_past_base_$[minBases]"), rate [transcriptionRate];

# recruitment of PolII
reaction "POL_recruit": reactants ("DNA_plus_TFC" "PolII"), products ("PCOM_plus_DNA_at_base_1"), rate 1.0;
reaction "POL_recruit_rev": reactants ("PCOM_plus_DNA_at_base_1"), products ("DNA_plus_TFC" "PolII"), rate 0.1;

# completion of transcription process
reaction "POL_finish": reactants ("PCOM_plus_DNA_past_base_$[minBases]"), products ("PolII" "mRNA_product_complete"), rate [transcriptionRate/codingRegionLengthBases];

# aborting of transcription
loop "i": start 2, stop [minBases]
{
        reaction "POL_abort$[i]": reactants ("PCOM_plus_DNA_at_base_$[i]"), products ("DNA_plus_TFC" "PolII" "mRNA_product_fragment"), rate [abortProbPerBase];
}

reaction "POL_abort": reactants ("PCOM_plus_DNA_past_base_$[minBases]"), products ("PolII" "mRNA_product_fragment"), rate [transcriptionRate * abortProbPerBase / codingRegionLengthBases];

# transcription factor A binding to empty DNA template
reaction "tfa": reactants ("DNA" "TFA"), products ("DNA_plus_TFA"), rate 1.0;
reaction "tfa_rev": reactants ("DNA_plus_TFA"), products ("DNA" "TFA"), rate 0.1;

# transcription factor B binding to empty DNA template
reaction "tfb": reactants ("DNA" "TFB"), products ("DNA_plus_TFB"), rate 1.0;
reaction "tfb_rev": reactants ("DNA_plus_TFB"), products ("DNA" "TFB"), rate 0.1;

# transcription factor A binding to DNA template (where B is already bound)
reaction "tfb_a": reactants ("DNA_plus_TFB" "TFA"), products ("DNA_plus_TFC"), rate 1.0;
reaction "tfb_a_rev": reactants ("DNA_plus_TFC"), products ("DNA_plus_TFB" "TFA"), rate 0.1;

# transcription factor B binding to DNA template (where A is already bound)
reaction "tfa_b": reactants ("DNA_plus_TFA" "TFB"), products ("DNA_plus_TFC"), rate 1.0;
reaction "tfa_b_rev": reactants ("DNA_plus_TFC"), products ("DNA_plus_TFA" "TFB"), rate 0.1;

model "myModel": speciesMode molecules, 
                 reactions (
                 "tfa" "tfa_rev" 
                 "tfb" "tfb_rev" 
                 "tfb_a" "tfb_a_rev" 
                 "tfa_b" "tfa_b_rev"
                 "POL_abort"
                 "POL_recruit" "POL_recruit_rev"
                 "POL_finish" 
                 "POL_faraway"
                            ); 

loop "i": start 1, stop [minBases-1]
{
        addReactionToModel "myModel": reaction "POL_advance$[i]";
}

loop "i": start 2, stop [minBases]
{
        addReactionToModel "myModel": reaction "POL_abort$[i]";
}


